<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAChASwDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDwuSWQSuPMf7x/iNJ5kn/PR/zpJf8AXP8A7x/nSUCH+ZJ/z0f/
        AL6pwkk/56P+dNC08CmA4SS/89G/OnCST/no/wCdIBTgtACh5D/G350oeT++350oFOC0AAeT/no350/f
        Jj77fnSYp+3Kg+9ADQ8n/PRvzpwlk/56N+dJtp22gVxPMk/56N+dODSf89G/OjFLimAmX/56P+dLvk/5
        6N+dLijFACb5P+ej/maPMk/56P8AnS459fekxSAXzJP77fnRvk/vv+dJRigA3yf89G/OjzJR0kb86MUu
        BgYoAb5kv/PRvzo8yX/nq/50u2k20AJ5kuf9Y350hklzzI/50/FIVpgM8xz/ABt+dJvfI+dvzp22kC8j
        60hjC8n/AD0b86YXkH8bfnUpXmmlaAIy8n99vzpvmSf89H/OpCtMIoAYZJP+ej/maaZJP+ejfmafimEZ
        oAjLyf8APR/++qaZZP8Ano/508imkUgE82T/AJ6P+dXLR3MR/eP97+8aokYq5Z/6k/71A0V5P9c/+8aA
        MGnuv758/wB40oFMQAU4ClAp6igBAtSBaAKcBmgAApwWnBacFpiE207HyD60uKXFADQKXbTqWgLjQvNL
        il6UEBV3McCgQm3mmF1UYzk+1V57tQcA/hUKpcT8qhCepFAyw9x7gVCbj6/nSLDGWwWLn16CpBGF6Io+
        gosBF549P1pRcjPI/WpfmHTj8BRubHKqw90FAxFuk/vEY9amWZW9PqKqN5ROHgx7o2P0pvks3+pfJ/ut
        wT/Q0AaQ+bpzS9KzEuHjfa4KkdQeDV+GdZVAJ57GgQ/FGKdtINJigLjStNA+cfWpKbigCMrz+NIVqXFN
        I9qAIcU0ipytRlaAIitRsKsEVGwpDICBmmkGpSKYRxQBEy1btB+6P+9VY1btB+6P+9SAgkH75/8AeP8A
        OlAp0g/ev/vGhaYCgVIBSAVIq0xCqtPC0KKkxx0oAQCl4zS4Pp+tBA2nIOMdBQAcUo56CmgKYzhTt9Kd
        HjbwCB6UwFCk+tLinAZ9acEHXJNIQzhV3t07Cs2WeS4l8uEbifSp7hnnmFtANzscYzU0Nom3y4jmP+KQ
        f8tD7f7Pp69apRC5Vhsx94/Of75HA+nr9a1YtOl8l0bI8zBK43P+Xb8fyrqfD3hCe7u0jmkSO4eMSwWp
        OJHQ/wAQ9Pbueo45rsIvCi2EeTB8/Ukit40Xa5lKqr2PNbTw0xAZwU46tyf8/hWlFoNsnWMN7muvk08h
        sY/SprfSpJCAEzn2pKm29BOocxHpNvjHkJj6Uyfw/A4x5C8+gru54NH0d44dUu0hnddwiCFmx6kAcU03
        nhqYbYtXhDdNro64/HFaezjtcz9o+x5jdeFY2BMeV/GufvNGntOGRivvXsl7pezDIVZHGVZTkEeorPk0
        pJk2yRgg+1Zyp6msauh4+6hk8uVdwHTPUfQ1WZHt/wB4hLR/qPrXpGo+CGlZ2iUxqq7vMI4X6+1cTeWd
        xp0/lzKASu5WBykin+IHoVNZypyjuXGopbCWlykqbW7/AKVMylHx19KzpYhCFuoM+VnDL/cb0+noa0Le
        QXEQx+FRYoCKTHtTtp9MfjR7ZP50gG4FN4oATecAhvWkULuPykHuaBikUwipCPrTcUARFajIqwVqNgfS
        gZAVqMipzmo2WkBCRVq0/wBUf96q5FWbQfuj/vUAROP3r/7xpVFK/wDrX/3jTgKAHKKkUUgFPUUxCgU+
        kHWngUxABS4pQKcFoAaODTsU4LS0wG4pl0/2e3J6nsKnQZcCovJW+1WOCQ/uYwZJj/sjk/njH404q7Fd
        IhgtmjiVW/19yu9z/ciPQfVv5fWvSvAvhIzwHWbm0aWFOLWIplSR1Zv9kfqfxrlNI059c8SQ2MCt5t3J
        mSTHCKBliPZQK950K6g0eVdKZdthtEat3jYdz7evvWj91XId27HB6gq3dw06syzb94mBw+71zXSaJ4th
        uCuneI9qSH5Yr7GA3oH9/f8AOrfi3w3JBK97aJuz80qKOD/tD+tcTNAZUwygis05J3Q2ovRnpNz4dxIp
        Vdytjaw6GorVtLtGLSTphFLnCN93pnp0zxmsLwp4gvNN2WFyxnsScKGPzRf7p9Pauxtra1vdIht1P+kT
        Wgi6/wABO6t6lepGK03M6GGpVJP2jdlbb5+TPPta0ZtZv7q4uhu3uCwCt8mfujpxxitbQdC0cIw1CN2S
        P5f3cbkFh1BIHb0rrZZDFv1RJgzysXSOB8rO0aONhP0A/EVFPIrRSQW4uWUtDdsLZ9pBkkLHPqoxz7Vz
        yxMmrWX4/wCZ3QwNLvL71/kZ09lptxarFpZUwW5MW0Zyp64Oec81UmsLHSrRr3U5kgtx0J6sfRR3NObU
        x4fOrfaLdnuZL6R4YjwGBxhj7Vw+oXN7rGofatQl82QcIg4SMegHat415eyTa1OCrh1DEThF3iv8iTWN
        Wl18NDHEbXS/4Yh9+X3Y/wBOlVJtBsdc0htNKLAyHdBIBnyH9f8AcJ+8Px6irttZT3UyQQoXlc4A7D/A
        V6Dp2lWXhbSWvbn55D2A5mfsB7Vg5y5rs1UVayPl64hl0jUZrS9hKujGG4hP15/oQfoaropsL9oS26Ns
        NG/ZlPINenfEvQZdYt4PFMMarMHEF4qr90E4RvwPyn2K155f24ewO2QPLZEZ2/3GPr3w3/oVW0ClfUlc
        chh3603FLbt51oGHPGaMcZrNljfwpCKfikxQBH3op+2kIpARkUwjipTzTCKBkJFRMOasMOKhIpAQsO9W
        rX/VH/equ1WLX/VH/eoGRMP3z/7xp60jf65/9404CmIeKkApq9alximgFC08CkUU8CmIUClFKBRTFcAK
        WlANWIbYv0FUo32E3YihHzE+1R2KGS1vZehuJktwf9nO5v5CtaPTn8mRyp4FLZac8WmWg28mSSRv0H9K
        3hRla9jKVWOx3/wm0K3tBqutyAIkUfkoznhB99zz9FzXTabd6d4g0w6jps7TRCUxOHTayt15HoRyPUGs
        ax0fVNS+G9rpOmoI49Run+2XJI/dxA9MZyxbaBx2zWrpOg6t4b8TRXT3dvf2l5ELe9jjt1g8rYP3cm3J
        DEdD3xTjo9rnPOpdb2Ltv45sI0uNKltdVvns5DCZbSyaUIw6rkenSsXUZtGk0VvENs8y6fvKyIYiJI33
        bSNnUc9qgTT9Ysm1ezGmXFxBd6i94lzZ6mts2D0Hr9atJ4e1a++Gd7osgM+ryTGRInuAxCeYCAXPGcDr
        VpKDvbQzdTnsk9SnZvHNdRxx2Oqwu3KyT2LRoMDOSx4FTW95aXV3c2tt5TXVrJsmjK4Zfceq+4qeystR
        092gl0S7tIJGHmy3Gqi4K4HGAecfSqS6MCbyaRvs942oPcWl1EQXjUqo59VJByp611RSlFXin8jH204S
        ajJx9H/kL/aFr9l8+O0nnjWd4Ntvas7K69TtHb3pmm6vZ6pKq2dndbGyPNktWSP5eoLdOOmKk0SK6062
        C3jxC4e7lncwNlcM2cj/AAo0C3uNO0yK1uNocSTOV3bl+ZyRnHbkZqlQi7PkX3Ip4uur/vJf+BMqSa9p
        01sZzb6j9kGT9pSwcxYzjdu7j3qf+z3N6tvAvmO5+XHcev0rG/sLVBpptrTSru3vNmInh1z9xG+cgrGT
        90ehr1LRNIwTdXLrlVBnm7Egcge2a5qnLy+8rW2NYTlKWju353MKLWdE8Lak+nTw6hfagkaPcfYrRpQo
        b7oJHQUz+3IfGOpTeWbiA2hCm3uITG0YIyDg+uOtUdS/tS28a6vqumaeL6z1COBVKXawlSgOchue9SeH
        ob3/AISPW9W1SzS0N8sSxRi4EjKUUgkkcYOamFO2rQp1XZxT/EoQ+JNHv9LurEafrc9textErx6c7KSc
        jIPTqAf+A15PJZi0117OT/lqr28mR3Ix/OvaPBmh3fhwael7c363UkbqbdrrfbruYkFFHHp37mvL/Glh
        Jb+N73aDhbzzFPsxDf1rOXob03a5yuk52SRN95GwQe1TdCR71oRaY0es3wVcKXJH55/rTZrF0kb5T1rC
        VOS6HRGcWUaKkdNtRnNZ2NBp60mOKdigdKVgIiMGmkd6kYUwikBGaiYVMwqJhxQMhcVYtR+6P+9UD1Yt
        P9Uf96kxoY6fvn4/iNPVD6GkaQ+c/P8AEakWU+taJIjUcE5qQIfekWQ+tSiU+tUuUl3AIfQ08J7UCVvW
        pFlPrVWiS2xoQ56H8qUx5U5zjHpUomJ7ml85v7xq/dF7xHDECp5Yr3Nb9jHDZWFxeyq0iwxlwuPvHsPz
        xWVFO28fMa3kurVdIuvt0kiWpUI7IMsM9MD612YSMOZvyObEynZW7lm0sPF15py3sVnpv2WVQwz1wfbr
        Wj4e+1x69baV4h0yN7WaNmR7QEFDzjJ6ckd6px6GBYQvF4xuFVlUrAxAKqfUBuMVa8Pajf6F41sLJNWf
        ULe6Q+YJTuUdf5Yrocpcl7v7zks+eyS+5npmg2v2GBltQ7QRBo0kL/KP3jHAX1weT9KyP7Z1F/iP/YpE
        ZsDEHP7v5slc/e+ta+m6lbI13YfaYUmaYvFHuA3AgHgegOa4XVUudQ+KMmnR38tmzwJ+9i5K/LmudRXP
        LmJjJySTXQ9FFm0lxtC/Lu/SsvwrqWo3d1qsdx5SpbS7YmSPaSAx6nvWP/wjlzDP5Q8TX7EHBO3j+dO8
        D6hIZ9at5JmkMMuNzdThiM1rKCdN632tp5nPBuLb7HodzaxalAsxXEgHI7GuA0v7VqNjevdxxiSKbZH5
        a44x3rtdN1BboSMlwkgjBBRGBwfeuO8G3k2q6fqrKQ0iT5Az25zWWHvCMr9LHRXvUUakFqyKOzZTI+3c
        VjZlBHGQDiuc0298W6xaNc2dnpzRhyh3LtORXYSXRWCR0mSRDG+GRwwBCn0rjPCemz6vpTT/APCSzacB
        KymMOoB6c8kV0zmursYw5nFtpdPM3tG03x0+qW5uLLSxZmVftDKw3iPPzY98V1Osa4ftaWGnbRawnEhx
        kSH+79PWl0eKGy0D+yV8RR3VyxbbPJKu9iTwMZ/CsSWJ7K4WGeSNJmPyxMwDHHoK5qajWm3N7bL9TrlK
        VKnaK33aMnWdZurX4gafo1tHClhcAbwUywyCThvwrSl8xGOAcA1y+t3mz4s6M8jL5ahd284UcHqa7K4u
        LHdmLUbMoecGdcr7HmrTunFshXi1K3QjS7uhZSxRxSSkKXhWMDzEcDgpnjPseDXM+OIY7LR7nVo4UmvR
        ImZZVzuwFHK9q7Swltrcfbri6t0tVUkTGQbfTOfTNcR48vfO8IXcivlZJS6EHIxv4P5VnGKhzOL2RqpO
        c4q2hyNt/wAJPeBLqC00xjMocKeCc/XvTILyafUV03VrGOC4mO2GWL7rN/dP8vrXRaAYmsNN331tDmGM
        EySgbeO/pUXxKbTZ9W0Wy0PUIry+a4DsbZgQgyOpHQ55rpryjT5eWTbfR6hRU5uSlGyXU429sxDO4BOe
        4xWYI1DttLE9xXo+veHb+3CzXIjiEpIjBdcufQc8muKulMTlTkEVw4mjGMm47HVQqylFX3M/Y3oaTYff
        8qlLnPWml29TXL7p0akZQ+/5Uwoff8qlaQ+pphc460nYepCV9j+VRMp9KnZz61CzGoditSF1PoantlPl
        njvUDMasWrHyj/vUtBq5VY/vX/3jT161G5/fP/vGnrQBODUqmoVNSpTESqakBqJRUijFUiR4p4plOFUh
        MlU/NWlbzRNA8E6q8Mgw6HvWWKerMOhrWnUcHdGU4KWjNP8AsvRNu4W7+/71qv6LDpFrqEnk2v77yyYm
        eQnBrB8xyMdvpUHnyQTJOv3omyR6j0rrjilde6vuMJYd2+JnoXhq40u78YWc97va7cGGN1cqFbHCn+Vd
        he2GkweI/wC2AskmpKoR5BKRHwMYC/TvXjF/5kdzFfWrFY5sOjr/AAsOfz716JZ60NX02G94WRvknUfw
        yAc/gfvD6n0pSquU7sj2KS0NxtRzNv75zVrwpo9tHeXVxaxyJHM26dnckM2c4FY+n2U2p3awxHaDy7no
        i+tdzavaW9qttaSKY41ycHn3Jq5VZNWMpU6aepVt9N0fwja3tzZxyhrlvmDyltzHPA9Bya5LTTa6Mksd
        iskaytufdJnPGP61oaq93qt3vVGEUYxGuO3r+NZkthcIRlMZ9qqmnFO+rfcic4yZr6Jomk/2b5elym2j
        V2a8jnk3FVIwWU+lc1c+EvCpnYW0V2YlOAWuTk+9SvDLHnrzwcVAzFDzU8zTu9TVRi/h0NTwv4M8LNrU
        DGO6S6ikWaBjcHBZTnBFdb4q8JWmp30PiBYXfULJcoA5AIHt3Irz6O6kjlSSNirowZWHYivVdC15dX0y
        O4Zgk6fJOo7N6/Q9a5akpKanE6Yxjycsjy3VdG0fXrhbu/imaYKFykpUfl61Tj8EeFd4aS2uWXuBdMDX
        ZeMND/s+Y6lZrm1mb94q/wDLNz3+h/nXLxyM0qrgnJxgdSfSqliFJfChKjbqa2vaVoGlfDuSF0klsETy
        7T94Q2WbhSfXOSfYVwp1Oxn8ONp88Qe0hj2oFkIIweBn60nxA8QeY8ejwOGhsSfN2nIe4IwQPUKPl+u6
        uOnL28MVgCN3+tnP+0eg/ClCu430D2Hma66foTRqxtnBP/TZqt2Mmn6VJ5ljbRxSHrISWb8zXPxyuzZ7
        CpzIxoWLad4xS+RToX0bZv6nqdtqoga5jLSQP5kZVyAG9axr2fzpGcnljk1W8xqY3NY1K0p6M0hTURue
        aQ0Gmk1gzZMaaa33acelRscUhkbE1Gx5xUjGompAMap7X/VH/eqsetWrb/Vn60hoqt/rX/3jT1qGQ/vn
        /wB405TVAW1x61OuPWqitUitzTTEXV2+tSAL61UVqkVqtNEtFoKv96nhVx96qwenBj61SZFi2qJ60/y4
        /wC9VQPT92atMlouCOPGN5/Kka3hIyZP0qsHOetOLkoRVKSFympp/wBmaJtPnmxDKcxMV+49XLBho948
        ckvyt8sseOGHYj39DXMljjGMiti3vU1CFLe5YJcIMRTHo3sa3hUi9zKUJdz1/wAOXlqmlI1pIszScySY
        wc/3SO2K05rmFneLz0VmnErKTjIx0rxnTtUvtEvCYwUYj5kb7rit+01prg7t5lYnLKfvj/4r8K2XIzin
        Snfc9W0uztNieZcBmUZwfXPWoNStbJC379Rk5Oev0zXE22s4X91LnHBXPNMuNSklb5mJ/Gp9jLm5uYV3
        y8vKatytoDgTAkZ/z71kXCw9RIMfSqLzE9TmommPTNEpJaGsKctyf92HGGFaOjasdJv1nDZiYbZV9V9f
        qOtYTy4GSwA9ScVFHdPc71tI/O8sZklZtkUY9Wc8Cuec0dMYPY9ga+je3aKZEltZ06ZyHU15N4l1WDw5
        eXVpZXKy3xJWJl5+zIR94/8ATTHAHbr6Vm6j47ubPSRpOmXgnYMS16FKrGp/hjzyR1+Y49hXIJEFT7Ve
        uwhY5AJ+eY+3t70pONtEOEJRer0HxxRQoL2U5VTiBDyZH9foKqCJWdneTLucsSOtFxcyXU3mygLgbUQd
        FXsBRED941lKS2NlF7lmONFGA4/KnYX++PyqEt6Um6p0HZkpCf3x+VMKr/f/AEqItSZqW0NJkhC/3hUZ
        UetNLU0sfWpuVYU8d6iakLc0wmpbHYQ1E1KzVGxqRiGrNr/qj/vVTOc1atT+6P1oGim5/ev/ALxpVNRu
        f3z/AO8acDTGTg1Kh5qup4qVTTEWVapA1Vg1SA07iZYU08Gq4apA1VcROOlPVu1QhqXNVclosUY25+bI
        ODwentUYPFLuOKdxEmMioyCOOopwejNUmTYv2+ogwi3u1M0Q4VgfmX/GroiLJ5lrIJkB7feFYWCDxT45
        XicMjFWHcGtlMzcDoF1WRSEnUSMv/PQYYf8AAhz/ADq0uqW7D5nu4c9wVkH64NYaarLjbMscy9ty8/nS
        teWcn34JEPfY3Fae00M/Z6m3/acGMf2k688ZtCf61BJqtoo+fUrxvaG0Vf1ZqxXksT0ef8qYX08DpcN7
        dKzk79TRIuTa5bRgtBYGaT/npfTFx/3wuB+eaoveaxrTRiVnlhjOUTAjhT3CjCj8qT7bbp/qrKPPZpDu
        NVrm+uLkbZZSV/uLwv5Csm0ty0mWpGs7Ryx23VxnIRf9Uh/rVGaZ7ibzZmMj9B6D6elQjNOA71m5FqPc
        VV3HJqXqNu4DPGT2pmaM1IxRwoGc470pNN3UmaLgLmmk02gmpbGBNMJoLVGTQMCajLUE0wmpBCMaYaU5
        ppNIpDTVq1/1R/3qqN0qe1J8o/71IZSc/vn/AN40oNMkP71yP7xoBqgJ1NShqrg08GgCwrVIGquDTlam
        IshqeG96rg08NTTFYshqfuqur0/eKYrE+6l3VCHGKXfVXFYn3Uu73qENS7qOYLE4cj3oJzUG6l3U7isS
        Gky2eDUe+l30cwuUUl+5pp3epoL/AE/Km7/p+VDkNRDBPejFBfPamZNQ2Vyj+B2pC34UzdSbjSCxJmjd
        Ue+kzmkBLmkLVFupu6mFiUvTd1RE0nNIB26kLUmajJpDHMajLc0En1phoAUtmmk0h6UwmkMVjxVm0/1R
        /wB6qhq1atiI8/xUhk7/AOsb6mgUUU0A4U8UUUAPHSnDrRRTEPp46UUUAPFOoopiHCl7UUUAOHSloopj
        FooopkCd6KKKRSA9Kb2oooGIKWiigBp7U00UUmAdqO1FFIQnem0UUDENHeiigkD0ph60UUDGtTDRRSGN
        NNNFFIYhqzbf6s/WiigOp//Z
</value>
  </data>
</root>